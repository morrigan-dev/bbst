<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">



<title>NeHe Productions: OpenGL Lesson #18</title>
<meta name="author" content="Jeff Molofee">
<meta name="description" content="OpenGL Tutorials, Demos, Games and More...">
<meta name="keywords" content="opengl, tutorial, article, demo, game, blend, texturemap, lighting, contest, 3D">
<link rel="stylesheet" type="text/css" href="lesson.asp-Dateien/rgb.css">
</head><body bgcolor="black" link="#aaccff" text="white" vlink="#aaccff">

<table border="0" width="100%"><tbody><tr><td align="center">
<!-- Begin -  Site: GameDev.net Zone: NeHe 728x90 -->
<script language="javascript" type="text/javascript">
<!--
var browName = navigator.appName;
var SiteID = 1;
var ZoneID = 4;
var browDateTime = (new Date()).getTime();
if (browName=='Netscape')
{
document.write('<s'+'cript lang' + 'uage="jav' + 'ascript" src="http://www.gamedev.net/banman/a.aspx?ZoneID=' + ZoneID + '&amp;Task=Get&amp;IFR=False&amp;Browser=NETSCAPE4&amp;PageID=61252&amp;SiteID=' + SiteID + '&amp;Random=' + browDateTime + '">'); document.write('</'+'scr'+'ipt>');
}
if (browName!='Netscape')
{
document.write('<s'+'cript lang' + 'uage="jav' + 'ascript" src="http://www.gamedev.net/banman/a.aspx?ZoneID=' + ZoneID + '&amp;Task=Get&amp;IFR=False&amp;PageID=61252&amp;SiteID=' + SiteID + '&amp;Random=' + browDateTime + '">'); document.write('</'+'scr'+'ipt>');
}
// --> 
</script><script language="javascript" src="lesson.asp-Dateien/a.js"></script><a href="http://www.gamedev.net/banman/a.aspx?Task=Click&amp;ZoneID=4&amp;CampaignID=609&amp;AdvertiserID=11&amp;BannerID=677&amp;SiteID=1&amp;RandomNumber=1027798357&amp;Keywords=" target="_Blank"><img src="lesson.asp-Dateien/BPleader.png" alt="" align="Center" border="0" height="90" width="728"></a><br>
<noscript> <a
href="http://www.gamedev.net/banman/a.aspx?ZoneID=4&amp;Task=Click&amp;Mode=HTML&amp;SiteID=1&amp;PageID=70554"
target="_blank"> <img
src="http://www.gamedev.net/banman/a.aspx?ZoneID=4&amp;Task=Get&amp;Mode=HTML&amp;SiteID=1&amp;PageID=70554"
width="728" height="90" border="0" alt=""></a>
</noscript>
<!-- End -  Site: GameDev.net Zone: NeHe 728x90 --></td></tr></tbody></table><br>

<table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tinylogo" height="130" width="326"><img src="lesson.asp-Dateien/blank.gif" alt="NeHe Productions" height="130" width="326"></td><td class="indexheading" align="center" valign="middle"><font class="text"><font class="theme" size="+3"><b><i>Lesson: 18</i></b></font></font></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text"><b><u>Quadrics</u></b>
<br><br>
Quadrics are a way of drawing complex objects that would usually take a few FOR loops and some background in trigonometry.
<br><br>
We'll be using the code from lesson seven. We will add 7 variables and modify the texture to add some variety :)
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>#include &lt;windows.h&gt;					<font class="theme">// Header File For Windows</font>
#include &lt;stdio.h&gt;					<font class="theme">// Header File For Standard Input/Output</font>
#include &lt;gl\gl.h&gt;					<font class="theme">// Header File For The OpenGL32 Library</font>
#include &lt;gl\glu.h&gt;					<font class="theme">// Header File For The GLu32 Library</font>
#include &lt;gl\glaux.h&gt;					<font class="theme">// Header File For The GLaux Library</font>

HDC		hDC=NULL;				<font class="theme">// Private GDI Device Context</font>
HGLRC		hRC=NULL;				<font class="theme">// Permanent Rendering Context</font>
HWND		hWnd=NULL;				<font class="theme">// Holds Our Window Handle</font>
HINSTANCE	hInstance;				<font class="theme">// Holds The Instance Of The Application</font>

bool	keys[256];					<font class="theme">// Array Used For The Keyboard Routine</font>
bool	active=TRUE;					<font class="theme">// Window Active Flag Set To TRUE By Default</font>
bool	fullscreen=TRUE;				<font class="theme">// Fullscreen Flag Set To Fullscreen Mode By Default</font>
bool	light;						<font class="theme">// Lighting ON/OFF</font>
bool	lp;						<font class="theme">// L Pressed?</font>
bool	fp;						<font class="theme">// F Pressed?</font>
bool    sp;						<font class="theme">// Spacebar Pressed?	( NEW )</font>

int	part1;						<font class="theme">// Start Of Disc	( NEW )</font>
int	part2;						<font class="theme">// End Of Disc		( NEW )</font>
int	p1=0;						<font class="theme">// Increase 1		( NEW )</font>
int	p2=1;						<font class="theme">// Increase 2		( NEW )</font>

GLfloat	xrot;						<font class="theme">// X Rotation</font>
GLfloat	yrot;						<font class="theme">// Y Rotation</font>
GLfloat xspeed;						<font class="theme">// X Rotation Speed</font>
GLfloat yspeed;						<font class="theme">// Y Rotation Speed</font>

GLfloat	z=-5.0f;					<font class="theme">// Depth Into The Screen</font>

GLUquadricObj *quadratic;				<font class="theme">// Storage For Our Quadratic Objects ( NEW )</font>

GLfloat LightAmbient[]=  { 0.5f, 0.5f, 0.5f, 1.0f };	<font class="theme">// Ambient Light Values</font>
GLfloat LightDiffuse[]=	 { 1.0f, 1.0f, 1.0f, 1.0f };	<font class="theme">// Diffuse Light Values</font>
GLfloat LightPosition[]= { 0.0f, 0.0f, 2.0f, 1.0f };	<font class="theme">// Light Position</font>

GLuint	filter;						<font class="theme">// Which Filter To Use</font>
GLuint	texture[3];					<font class="theme">// Storage for 3 textures</font>
GLuint  object=0;					<font class="theme">// Which Object To Draw	( NEW )</font>

LRESULT	CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);	<font class="theme">// Declaration For WndProc</font>
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">Okay
now move down to InitGL(), We're going to add 3 lines of code here to
initialize our quadratic. Add these 3 lines after you enable light1 but
before you return true. The first line of code initializes the
Quadratic and creates a pointer to where it will be held in memory. If
it can't be created it returns 0. The second line of code creates
smooth normals on the quadratic so lighting will look great. Other
possible values are GLU_NONE, and GLU_FLAT. Last we enable texture
mapping on our quadratic. Texture mapping is kind of awkward and never
goes the way you planned as you can tell from the crate texture.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>	quadratic=gluNewQuadric();			<font class="theme">// Create A Pointer To The Quadric Object ( NEW )</font>
	gluQuadricNormals(quadratic, GLU_SMOOTH);	<font class="theme">// Create Smooth Normals ( NEW )</font>
	gluQuadricTexture(quadratic, GL_TRUE);		<font class="theme">// Create Texture Coords ( NEW )</font>
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">Now
I decided to keep the cube in this tutorial so you can see how the
textures are mapped onto the quadratic object. I decided to move the
cube into its own function so when we write the draw function it will
appear more clean. Everybody should recognize this code. =P
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>GLvoid glDrawCube()					<font class="theme">// Draw A Cube</font>
{
		glBegin(GL_QUADS);			<font class="theme">// Start Drawing Quads</font>
		<font class="theme">// Front Face</font>
		glNormal3f( 0.0f, 0.0f, 1.0f);		<font class="theme">// Normal Facing Forward</font>
		glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, -1.0f,  1.0f);	<font class="theme">// Bottom Left Of The Texture and Quad</font>
		glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f, -1.0f,  1.0f);	<font class="theme">// Bottom Right Of The Texture and Quad</font>
		glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f,  1.0f,  1.0f);	<font class="theme">// Top Right Of The Texture and Quad</font>
		glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f,  1.0f,  1.0f);	<font class="theme">// Top Left Of The Texture and Quad</font>
		<font class="theme">// Back Face</font>
		glNormal3f( 0.0f, 0.0f,-1.0f);		<font class="theme">// Normal Facing Away</font>
		glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f, -1.0f);	<font class="theme">// Bottom Right Of The Texture and Quad</font>
		glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f,  1.0f, -1.0f);	<font class="theme">// Top Right Of The Texture and Quad</font>
		glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f,  1.0f, -1.0f);	<font class="theme">// Top Left Of The Texture and Quad</font>
		glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f, -1.0f);	<font class="theme">// Bottom Left Of The Texture and Quad</font>
		<font class="theme">// Top Face</font>
		glNormal3f( 0.0f, 1.0f, 0.0f);		<font class="theme">// Normal Facing Up</font>
		glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f,  1.0f, -1.0f);	<font class="theme">// Top Left Of The Texture and Quad</font>
		glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f,  1.0f,  1.0f);	<font class="theme">// Bottom Left Of The Texture and Quad</font>
		glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f,  1.0f,  1.0f);	<font class="theme">// Bottom Right Of The Texture and Quad</font>
		glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f,  1.0f, -1.0f);	<font class="theme">// Top Right Of The Texture and Quad</font>
		<font class="theme">// Bottom Face</font>
		glNormal3f( 0.0f,-1.0f, 0.0f);		<font class="theme">// Normal Facing Down</font>
		glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f, -1.0f, -1.0f);	<font class="theme">// Top Right Of The Texture and Quad</font>
		glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f, -1.0f, -1.0f);	<font class="theme">// Top Left Of The Texture and Quad</font>
		glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f,  1.0f);	<font class="theme">// Bottom Left Of The Texture and Quad</font>
		glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f,  1.0f);	<font class="theme">// Bottom Right Of The Texture and Quad</font>
		<font class="theme">// Right face</font>
		glNormal3f( 1.0f, 0.0f, 0.0f);		<font class="theme">// Normal Facing Right</font>
		glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f, -1.0f, -1.0f);	<font class="theme">// Bottom Right Of The Texture and Quad</font>
		glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f,  1.0f, -1.0f);	<font class="theme">// Top Right Of The Texture and Quad</font>
		glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f,  1.0f,  1.0f);	<font class="theme">// Top Left Of The Texture and Quad</font>
		glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f,  1.0f);	<font class="theme">// Bottom Left Of The Texture and Quad</font>
		<font class="theme">// Left Face</font>
		glNormal3f(-1.0f, 0.0f, 0.0f);		<font class="theme">// Normal Facing Left</font>
		glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, -1.0f, -1.0f);	<font class="theme">// Bottom Left Of The Texture and Quad</font>
		glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f,  1.0f);	<font class="theme">// Bottom Right Of The Texture and Quad</font>
		glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f,  1.0f,  1.0f);	<font class="theme">// Top Right Of The Texture and Quad</font>
		glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f,  1.0f, -1.0f);	<font class="theme">// Top Left Of The Texture and Quad</font>
	glEnd();					<font class="theme">// Done Drawing Quads</font>
}
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
Next is the DrawGLScene function, here I just wrote a simple if statement to draw the different objects. Also I used a
static variable (a local variable that keeps its value everytime it is called) for a cool effect when drawing the
partial disk. I'm going to rewrite the whole DrawGLScene function for clarity.
<br><br>
You'll notice that when I talk about the parameters being used I ignore the actual first parameter (quadratic).  This
parameter is used for all the objects we draw aside from the cube, so I ignore it when I talk about the parameters.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>int DrawGLScene(GLvoid)						<font class="theme">// Here's Where We Do All The Drawing</font>
{
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);	<font class="theme">// Clear The Screen And The Depth Buffer</font>
	glLoadIdentity();					<font class="theme">// Reset The View</font>
	glTranslatef(0.0f,0.0f,z);				<font class="theme">// Translate Into The Screen</font>

	glRotatef(xrot,1.0f,0.0f,0.0f);				<font class="theme">// Rotate On The X Axis</font>
	glRotatef(yrot,0.0f,1.0f,0.0f);				<font class="theme">// Rotate On The Y Axis</font>

	glBindTexture(GL_TEXTURE_2D, texture[filter]);		<font class="theme">// Select A Filtered Texture</font>

	<font class="theme">// This Section Of Code Is New ( NEW )</font>
	switch(object)						<font class="theme">// Check object To Find Out What To Draw</font>
	{
	case 0:							<font class="theme">// Drawing Object 1</font>
		glDrawCube();					<font class="theme">// Draw Our Cube</font>
		break;						<font class="theme">// Done</font>
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
The second object we create is going to be a Cylinder.  The first parameter (1.0f) is the radius of the cylinder at
base (bottom).  The second parameter (1.0f) is the radius of the cylinder at the top.  The third parameter ( 3.0f) is
the height of the cylinder (how long it is).  The fouth parameter (32) is how many subdivisions there are "around"
the Z axis, and finally, the fifth parameter (32) is the amount of subdivisions "along" the Z axis.  The more
subdivisions there are the more detailed the object is.  By increase the amount of subdivisions you add more polygons
to the object.  So you end up sacrificing speed for quality.  Most of the time it's easy to find a happy medium.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>	case 1:							<font class="theme">// Drawing Object 2</font>
		glTranslatef(0.0f,0.0f,-1.5f);			<font class="theme">// Center The Cylinder</font>
		gluCylinder(quadratic,1.0f,1.0f,3.0f,32,32);	<font class="theme">// Draw Our Cylinder</font>
		break;						<font class="theme">// Done</font>
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
The third object we create will be a CD shaped disc.  The first parameter (0.5f) is the inner radius of the disk.  This
value can be zero, meaning there will be no hole in the middle.  The larger the inner radius is, the bigger the hole in
the middle of the disc will be.  The second parameter (1.5f) is the outer radius.  This value should be larger than the
inner radius.  If you make this value a little bit larger than the inner radius you will end up with a thing ring.  If
you make this value alot larger than the inner radius you will end up with a thick ring.  The third parameter (32) is
the number of slices that make up the disc.  Think of slices like the slices in a pizza.  The more slices you have, the
smoother the outer edge of the disc will be.  Finally the fourth parameter (32) is the number of rings that make up the
disc. The rings are are similar to the tracks on a record.  Circles inside circles.  These ring subdivide the disc from
the inner radius to the outer radius, adding more detail.  Again, the more subdivisions there are, the slow it will run.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>	case 2:							<font class="theme">// Drawing Object 3</font>
		gluDisk(quadratic,0.5f,1.5f,32,32);		<font class="theme">// Draw A Disc (CD Shape)</font>
		break;						<font class="theme">// Done</font>
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
Our fourth object is an object that I know many of you have been dying to figure out.  The Sphere!  This one is quite
simple.  The first parameter is the radius of the sphere.  In case you're not familiar with radius/diameter, etc, the
radius is the distance from the center of the object to the outside of the object.  In this case our radius is 1.3f.
Next we have our subdivision "around" the Z axis (32), and our subdivision "along" the Z axis (32).  The more
subdivisions you have the smoother the sphere will look.  Spheres usually require quite a few subdivisions to make them
look smooth.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>	case 3:							<font class="theme">// Drawing Object 4</font>
		gluSphere(quadratic,1.3f,32,32);		<font class="theme">// Draw A Sphere</font>
		break;						<font class="theme">// Done</font>
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
Our fifth object is created using the same command that we used to create a Cylinder.  If you remember, when we were
creating the Cylinder the first two parameters controlled the radius of the cylinder at the bottom and the top.  To
make a cone it makes sense that all we'd have to do is make the radius at one end Zero.  This will create a point at
one end.  So in the code below, we make the radius at the top of the cylinder equal zero.  This creates our point,
which also creates our cone.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>	case 4:							<font class="theme">// Drawing Object 5</font>
		glTranslatef(0.0f,0.0f,-1.5f);			<font class="theme">// Center The Cone</font>
		gluCylinder(quadratic,1.0f,0.0f,3.0f,32,32);	<font class="theme">// A Cone With A Bottom Radius Of .5 And A Height Of 2</font>
		break;						<font class="theme">// Done</font>
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
Our sixth object is created with gluPartialDisc.  The object we create using this command will look exactly like the
disc we created above, but with the command gluPartialDisk there are two new parameters.  The fifth parameter (part1)
is the start angle we want to start drawing the disc at.  The sixth parameter is the sweep angle.  The sweep angle is
the distance we travel from the current angle.  We'll increase the sweep angle, which causes the disc to be slowly
drawn to the screen in a clockwise direction.  Once our sweep hits 360 degrees we start to increase the start angle.
the makes it appear as if the disc is being erased, then we start all over again!
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>	case 5:							<font class="theme">// Drawing Object 6</font>
		part1+=p1;					<font class="theme">// Increase Start Angle</font>
		part2+=p2;					<font class="theme">// Increase Sweep Angle</font>

		if(part1&gt;359)					<font class="theme">// 360 Degrees</font>
		{
			p1=0;					<font class="theme">// Stop Increasing Start Angle</font>
			part1=0;				<font class="theme">// Set Start Angle To Zero</font>
			p2=1;					<font class="theme">// Start Increasing Sweep Angle</font>
			part2=0;				<font class="theme">// Start Sweep Angle At Zero</font>
		}
		if(part2&gt;359)					<font class="theme">// 360 Degrees</font>
		{
			p1=1;					<font class="theme">// Start Increasing Start Angle</font>
			p2=0;					<font class="theme">// Stop Increasing Sweep Angle</font>
		}
		gluPartialDisk(quadratic,0.5f,1.5f,32,32,part1,part2-part1);	<font class="theme">// A Disk Like The One Before</font>
		break;						<font class="theme">// Done</font>
	};

	xrot+=xspeed;						<font class="theme">// Increase Rotation On X Axis</font>
	yrot+=yspeed;						<font class="theme">// Increase Rotation On Y Axis</font>
	return TRUE;						<font class="theme">// Keep Going</font>
}
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
In the KillGLWindow() section of code, we need to delete the quadratic to free up system resources.  We
do this with the command gluDeleteQuadratic.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>GLvoid KillGLWindow(GLvoid)					<font class="theme">// Properly Kill The Window</font>
{
	gluDeleteQuadric(quadratic);				<font class="theme">// Delete Quadratic - Free Resources</font>
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
Now for the final part, they key input. Just add this where we check the rest of key input.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>				if (keys[' '] &amp;&amp; !sp)		<font class="theme">// Is Spacebar Being Pressed?</font>
				{
					sp=TRUE;		<font class="theme">// If So, Set sp To TRUE</font>
					object++;		<font class="theme">// Cycle Through The Objects</font>
					if(object&gt;5)		<font class="theme">// Is object Greater Than 5?</font>
						object=0;	<font class="theme">// If So, Set To Zero</font>
				}
				if (!keys[' '])			<font class="theme">// Has The Spacebar Been Released?</font>
				{
					sp=FALSE;		<font class="theme">// If So, Set sp To FALSE</font>
				}
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
Thats all! Now you can draw quadrics in OpenGL. Some really impressive things can be done with morphing and
quadrics.  The animated disc is an example of simple morphing.
<br><br>
Everyone if you have time go check out my website, <a href="http://www.tiptup.com/">TipTup.Com 2000</a>.
<br><br>
<b>GB Schmick</b> (<b>TipTup</b>)
<br><br>
<b>Jeff Molofee</b> (<b>NeHe</b>)
<br><br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/vc/lesson18.zip">Visual C++</a> Code For This Lesson.
<br><br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/bcb6/lesson18_bcb6.zip">Borland C++ Builder 6</a> Code For This Lesson. ( Conversion by <a href="mailto:christian@tugzip.com">Christian Kindahl</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/c_sharp/lesson18.zip">C#</a> Code For This Lesson. ( Conversion by <a href="mailto:bholley@unlnotes.unl.edu">Brian Holley</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/cwarrior/lesson18.zip">Code Warrior 5.3</a> Code For This Lesson. ( Conversion by <a href="mailto:DelusionalBeing@hotmail.com">Scott Lupton</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/cygwin/lesson18.tar.gz">Cygwin</a> Code For This Lesson. ( Conversion by <a href="mailto:stephan@lazyfellow.com">Stephan Ferraro</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/delphi/lesson18.zip">Delphi</a> Code For This Lesson. ( Conversion by <a href="mailto:michal_praha@seznam.cz">Michal Tucek</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/devc/lesson18.zip">Dev C++</a> Code For This Lesson. ( Conversion by <a href="mailto:danprogram@hotmail.com">Dan</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/euphoria/lesson18.zip">Euphoria</a> Code For This Lesson. ( Conversion by <a href="mailto:1evan@sbcglobal.net">Evan Marshall</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/gameglut/lesson18.zip">Game GLUT</a> Code For This Lesson. ( Conversion by <a href="mailto:milix_gr@hotmail.com">Milikas Anastasios</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/irix/lesson18.tar.gz">Irix / GLUT</a> Code For This Lesson. ( Conversion by <a href="mailto:rpf1@york.ac.uk">Rob Fletcher</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/java/lesson18.zip">Java</a> Code For This Lesson. ( Conversion by <a href="mailto:jeff@consunet.com.au">Jeff Kirby</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/jogl/lesson18.jar">JoGL</a> Code For This Lesson. ( Conversion by <a href="mailto:abezrati@hotmail.com">Abdul Bezrati</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/lccwin32/lccwin32_lesson18.zip">LCC Win32</a> Code For This Lesson. ( Conversion by <a href="mailto:rwishlaw@shaw.ca">Robert Wishlaw</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/linux/lesson18.tar.gz">Linux</a> Code For This Lesson. ( Conversion by <a href="mailto:rgbe@yahoo.com">Simon Werner</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/linuxglx/lesson18.tar.gz">Linux/GLX</a> Code For This Lesson. ( Conversion by <a href="mailto:miqster@gmx.net">Mihael Vrbanec</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/linuxsdl/lesson18.tar.gz">Linux/SDL</a> Code For This Lesson. ( Conversion by <a href="mailto:leggett@eecs.tulane.edu">Ti Leggett</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/lwjgl/lesson18.jar">LWJGL</a> Code For This Lesson. ( Conversion by <a href="mailto:mark.bernard@rogers.com">Mark Bernard</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/mac/lesson18.sit">Mac OS</a> Code For This Lesson. ( Conversion by <a href="mailto:asp@usc.edu">Anthony Parker</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/macosxcocoa/lesson18.zip">Mac OS X/Cocoa</a> Code For This Lesson. ( Conversion by <a href="mailto:blb@pobox.com">Bryan Blackburn</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/masm/lesson18.zip">MASM</a> Code For This Lesson. ( Conversion by <a href="mailto:chris.j84@free.fr">Christophe</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/openil/lesson18.zip">Visual C++ / OpenIL</a> Code For This Lesson. ( Conversion by <a href="mailto:doomwiz@ticnet.com">Denton Woods</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/pelles_c/lesson18.zip">Pelles C</a> Code For This Lesson. ( Conversion by <a href="mailto:pelle@smorgasbordet.com">Pelle Orinius</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/sdl/lesson18.tar.gz">SDL</a> Code For This Lesson. ( Conversion by <a href="mailto:kjrockot@home.com">Ken Rockot</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/vb/lesson18.zip">Visual Basic</a> Code For This Lesson. ( Conversion by <a href="mailto:thegilb@hotmail.com">The Gilb</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/vs_net/lesson18.zip">Visual Studio .NET</a> Code For This Lesson. ( Conversion by <a href="mailto:ultimatezeus@hotmail.com">Grant James</a> )<br>
<br><br>
<br><br>
<table border="0" width="100%">
<tbody><tr><td align="left" width="50%"><b><font size="-1"><a href="http://nehe.gamedev.net/data/lessons/lesson.asp?lesson=17">&lt; Lesson 17</a></font></b></td>
<td align="right" width="50%"><b><font size="-1"><a href="http://nehe.gamedev.net/data/lessons/lesson.asp?lesson=19">Lesson 19 &gt;</a></font></b></td>
</tr></tbody></table>
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table>

</body></html>