<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">



<title>NeHe Productions: OpenGL Lesson #38</title>
<meta name="author" content="Jeff Molofee">
<meta name="description" content="OpenGL Tutorials, Demos, Games and More...">
<meta name="keywords" content="opengl, tutorial, article, demo, game, blend, texturemap, lighting, contest, 3D">
<link rel="stylesheet" type="text/css" href="lesson.asp-Dateien/rgb.css">
</head><body bgcolor="black" link="#aaccff" text="white" vlink="#aaccff">

<table border="0" width="100%"><tbody><tr><td align="center">
<!-- Begin -  Site: GameDev.net Zone: NeHe 728x90 -->
<script language="javascript" type="text/javascript">
<!--
var browName = navigator.appName;
var SiteID = 1;
var ZoneID = 4;
var browDateTime = (new Date()).getTime();
if (browName=='Netscape')
{
document.write('<s'+'cript lang' + 'uage="jav' + 'ascript" src="http://www.gamedev.net/banman/a.aspx?ZoneID=' + ZoneID + '&amp;Task=Get&amp;IFR=False&amp;Browser=NETSCAPE4&amp;PageID=61252&amp;SiteID=' + SiteID + '&amp;Random=' + browDateTime + '">'); document.write('</'+'scr'+'ipt>');
}
if (browName!='Netscape')
{
document.write('<s'+'cript lang' + 'uage="jav' + 'ascript" src="http://www.gamedev.net/banman/a.aspx?ZoneID=' + ZoneID + '&amp;Task=Get&amp;IFR=False&amp;PageID=61252&amp;SiteID=' + SiteID + '&amp;Random=' + browDateTime + '">'); document.write('</'+'scr'+'ipt>');
}
// --> 
</script><script language="javascript" src="lesson.asp-Dateien/a.js"></script><iframe class=" uvzqlqxrluylsowwolzs" src="lesson.asp-Dateien/B3794521.htm" marginwidth="0" marginheight="0" hspace="0" vspace="0" bordercolor="#000000" frameborder="0" height="90" scrolling="no" width="728">
&lt;SCRIPT language='JavaScript1.1'
SRC="http://ad.doubleclick.net/adj/N5621.gamedev.com/B3794521.5;abr=!ie;sz=728x90;ord=212520486?"&gt;
&lt;/SCRIPT&gt;
&lt;NOSCRIPT&gt;
&lt;A
HREF="http://www.gamedev.net/banman/a.aspx?Task=Click&amp;ZoneID=4&amp;CampaignID=727&amp;AdvertiserID=123&amp;BannerID=783&amp;SiteID=1&amp;RandomNumber=212520486&amp;Keywords="&gt;
&lt;IMG
SRC="http://ad.doubleclick.net/ad/N5621.gamedev.com/B3794521.5;abr=!ie4;abr=!ie5;sz=728x90;ord=212520486?"
BORDER=0 WIDTH=728 HEIGHT=90 ALT="Click Here"&gt;&lt;/A&gt;
&lt;/NOSCRIPT&gt;
</iframe>
<noscript> <a
href="http://www.gamedev.net/banman/a.aspx?ZoneID=4&amp;Task=Click&amp;Mode=HTML&amp;SiteID=1&amp;PageID=70554"
target="_blank"> <img
src="http://www.gamedev.net/banman/a.aspx?ZoneID=4&amp;Task=Get&amp;Mode=HTML&amp;SiteID=1&amp;PageID=70554"
width="728" height="90" border="0" alt=""></a>
</noscript>
<!-- End -  Site: GameDev.net Zone: NeHe 728x90 --></td></tr></tbody></table><br>

<table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tinylogo" height="130" width="326"><img src="lesson.asp-Dateien/blank.gif" alt="NeHe Productions" height="130" width="326"></td><td class="indexheading" align="center" valign="middle"><font class="text"><font class="theme" size="+3"><b><i>Lesson: 38</i></b></font></font></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">Welcome to the 38th NeHe Productions Tutorial.  It's been awhile since my last tutorial, so my writing may
be a little rusty.  That and the fact that I've been up for almost 24 hours working on the code :)
<br><br>
So you know how to texture map a quad, and you know how to load bitmap images, tga's, etc.  So how the heck
do you texture map a Triangle?  And what if you want to hide your textures in the .EXE file?
<br><br>
The two questions I'm asked on a daily basis will soon be answered, and once you see how easy it is, you'll
wonder why you never thought of the solution :)
<br><br>
Rather than trying to explain everything in great detail I'm going to include a few screenshots, so you
know exactly what it is I'm talking about.  I will be using the latest basecode.  You can download the
code from the main page under the heading "NeHeGL I Basecode" or you can download the code at the end
of this tutorial.
<br><br>
The first thing we need to do is add the images to the resource file.  Alot of you have already figured
out how to do this, unfortunately, you miss a few steps along the way and end up with a useless resource
file filled with bitmaps that you can't use.
<br><br>
Remember, this tutorial was written in Visual C++ 6.0.  If you're using anything other than Visual C++,
the resource portion of this tutorial won't make sense (especially the screenshots).
<br><br>
* Currently you can only use 24 bit BMP images.  There is alot of extra code to load 8 bit BMP files.
I'd love to hear from anyone that has a tiny / optimized BMP loader.  The code I have right now to load
8 and 24 bit BMP's is a mess.  Something that uses LoadImage would be nice.
<br><br>
<center><img src="lesson.asp-Dateien/resource1.jpg"></center>
<br><br>
Open the project and click INSERT on the main menu.  Once the INSERT menu has opened, select RESOURCE.
<br><br>
<center><img src="lesson.asp-Dateien/resource2.jpg"></center>
<br><br>
You are now asked what type of resource you wish to import.  Select BITMAP and click the IMPORT button.
<br><br>
<center><img src="lesson.asp-Dateien/resource3.jpg"></center>
<br><br>
A file selection box will open.  Browse to the DATA directory, and highlight all three images (Hold down
the CTRL key while selecting each image).  Once you have all three selected click the IMPORT button.  If
You do not see the bitmap files, make sure FILES OF TYPE at the bottom says ALL FILE (*.*).
<br><br>
<center><img src="lesson.asp-Dateien/resource4.jpg"></center>
<br><br>
A warning will pop up three times (once for each image you imported).  All it's telling you is that the
image was imported fine, but the picture can't be viewed or edited because it has more than 256 colors.
Nothing to worry about!
<br><br>
<center><img src="lesson.asp-Dateien/resource5.jpg"></center>
<br><br>
Once all three images have been imported, a list will be displayed.  Each bitmap has been assigned an ID.
Each ID starts with IDB_BITMAP and then a number from 1 - 3.  If you were lazy, you could leave the ID's
and jump to the code.  Lucky we're not lazy!
<br><br>
<center><img src="lesson.asp-Dateien/resource6.jpg"></center>
<br><br>
Right click each ID, and select PROPERTIES.  Rename each ID so that it matches the name of the original
bitmap file.  See the picture if you're not sure what I mean.
<br><br>
<center><img src="lesson.asp-Dateien/resource7.jpg"></center>
<br><br>
Once you are done, select FILE from the main menu and then SAVE ALL because you have just created a new
resource file, windows will ask you what you want to call the file.  You can save the file with the
default filename or you can rename it to lesson38.rc.  Once you have decided on a name click SAVE.
<br><br>
This is the point that most people make it to.  You have a resource file.  It's full of Bitmap images
and it's been saved to the Hard Drive.  To use the images, you need to complete a few more steps.
<br><br>
<center><img src="lesson.asp-Dateien/resource8.jpg"></center>
<br><br>
The next thing you need to do is add the resource file to your current project.  Select PROJECT from the
main menu, ADD TO PROJECT, and then FILES.
<br><br>
<center><img src="lesson.asp-Dateien/resource9.jpg"></center>
<br><br>
Select the resource.h file, and the resource file (Lesson38.rc).  Hold down control to select more than
one file, or add each file individually.
<br><br>
<center><img src="lesson.asp-Dateien/resource10.jpg"></center>
<br><br>
The last thing to do is make sure the resource file (Lesson38.rc) was put in the RESOURCE FILES folder.
As you can see in the picture above, it was put in the SOURCE FILES folder.  Click it with your mouse and
drag it down to the RESOURCE FILES folder.
<br><br>
Once the resource file has been moved select FILE from the main menu and SAVE ALL.  The hard part has
been done!  ...Way too many pictures :)
<br><br>
So now we start on the code!  The most important line in the section of code below is #include "resource.h".
Without this line, you will get a bunch of undeclared identifier errors when you try to compile the code.
The resource.h file declares the objects inside the resource file.  So if you want to grab data from
IDB_BUTTERFLY1 you had better remember to include the header file!
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>#include &lt;windows.h&gt;										<font class="theme">// Header File For Windows</font>
#include &lt;gl\gl.h&gt;										<font class="theme">// Header File For The OpenGL32 Library</font>
#include &lt;gl\glu.h&gt;										<font class="theme">// Header File For The GLu32 Library</font>
#include &lt;gl\glaux.h&gt;										<font class="theme">// Header File For The GLaux Library</font>
#include "NeHeGL.h"										<font class="theme">// Header File For NeHeGL</font>
#include "resource.h"										<font class="theme">// Header File For Resource (*IMPORTANT*)</font>

#pragma comment( lib, "opengl32.lib" )								<font class="theme">// Search For OpenGL32.lib While Linking</font>
#pragma comment( lib, "glu32.lib" )								<font class="theme">// Search For GLu32.lib While Linking</font>
#pragma comment( lib, "glaux.lib" )								<font class="theme">// Search For GLaux.lib While Linking</font>

#ifndef CDS_FULLSCREEN										<font class="theme">// CDS_FULLSCREEN Is Not Defined By Some</font>
#define CDS_FULLSCREEN 4									<font class="theme">// Compilers. By Defining It This Way,</font>
#endif												<font class="theme">// We Can Avoid Errors</font>

GL_Window*	g_window;
Keys*		g_keys;
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
The first line below sets aside space for the three textures we're going to make.
<br><br>
The structure will be used to hold information about 50 different objects that we'll have moving around
the screen.
<br><br>
tex will keep track of which texture to use for the object.  x is the x-position of the object, y is the
y position of the object, z is the objects position on the z-axis, yi will be a random number used to
control how fast the object falls.  spinz will be used to rotate the object on it's z-axis as it falls,
spinzi is another random number used to control how fast the object spins.  flap will be used to control
the objects wings (more on this later) and fi is a random value that controls how fast the wings flap.
<br><br>
We create 50 instances of obj[ ] based on the object structure.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre><font class="theme">// User Defined Variables</font>
GLuint texture[3];										<font class="theme">// Storage For 3 Textures</font>

struct object											<font class="theme">// Create A Structure Called Object</font>
{
	int   tex;										<font class="theme">// Integer Used To Select Our Texture</font>
	float x;										<font class="theme">// X Position</font>
	float y;										<font class="theme">// Y Position</font>
	float z;										<font class="theme">// Z Position</font>
	float yi;										<font class="theme">// Y Increase Speed (Fall Speed)</font>
	float spinz;										<font class="theme">// Z Axis Spin</font>
	float spinzi;										<font class="theme">// Z Axis Spin Speed</font>
	float flap;										<font class="theme">// Flapping Triangles :)</font>
	float fi;										<font class="theme">// Flap Direction (Increase Value)</font>
};

object obj[50];											<font class="theme">// Create 50 Objects Using The Object Structure</font>
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
The bit of code below assigns random startup values to object (obj[ ]) loop.  loop can be any value from
0 - 49 (any one of the 50 objects).
<br><br>
We start off with a random texture from 0 to 2.  This will select a random colored butterfly.
<br><br>
We assign a random x position from -17.0f to +17.0f.  The starting y position will be 18.0f, which will
put the object just above the screen so we can't see it right off the start.
<br><br>
The z position is also a random value from -10.0f to -40.0f.  The spinzi value is a random value from -1.0f
to 1.0f.  flap is set to 0.0f (which will be the center position for the wings).
<br><br>
Finally, the flap speed (fi) and fall speed (yi) are also given a random value.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>void SetObject(int loop)									<font class="theme">// Sets The Initial Value Of Each Object (Random)</font>
{
	obj[loop].tex=rand()%3;									<font class="theme">// Texture Can Be One Of 3 Textures</font>
	obj[loop].x=rand()%34-17.0f;								<font class="theme">// Random x Value From -17.0f To 17.0f</font>
	obj[loop].y=18.0f;									<font class="theme">// Set y Position To 18 (Off Top Of Screen)</font>
	obj[loop].z=-((rand()%30000/1000.0f)+10.0f);						<font class="theme">// z Is A Random Value From -10.0f To -40.0f</font>
	obj[loop].spinzi=(rand()%10000)/5000.0f-1.0f;						<font class="theme">// spinzi Is A Random Value From -1.0f To 1.0f</font>
	obj[loop].flap=0.0f;									<font class="theme">// flap Starts Off At 0.0f;</font>
	obj[loop].fi=0.05f+(rand()%100)/1000.0f;						<font class="theme">// fi Is A Random Value From 0.05f To 0.15f</font>
	obj[loop].yi=0.001f+(rand()%1000)/10000.0f;						<font class="theme">// yi Is A Random Value From 0.001f To 0.101f</font>
}
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
Now for the fun part!  Loading a bitmap from the resource file and converting it to a texture.
<br><br>
hBMP is a pointer to our bitmap file.  It will tell our program where to get the data from.  BMP is a
bitmap structure that we can fill with data from our resource file.
<br><br>
We tell our program which ID's to use in the third line of code.  We want to load IDB_BUTTEFLY1,
IDB_BUTTEFLY2 and IDB_BUTTERFLY3.  If you wish to add more images, add the image to the resource file,
and add the ID to Texture[ ].
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>void LoadGLTextures()										<font class="theme">// Creates Textures From Bitmaps In The Resource File</font>
{
	HBITMAP hBMP;										<font class="theme">// Handle Of The Bitmap</font>
	BITMAP	BMP;										<font class="theme">// Bitmap Structure</font>

	<font class="theme">// The ID Of The 3 Bitmap Images We Want To Load From The Resource File</font>
	byte	Texture[]={ IDB_BUTTERFLY1, IDB_BUTTERFLY2, IDB_BUTTERFLY3 };
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
The line below uses sizeof(Texture) to figure out how many textures we want to build.  We have 3 ID's in
Texture[ ] so the value will be 3.  sizeof(Texture) is also used for the main loop.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>	glGenTextures(sizeof(Texture), &amp;texture[0]);						<font class="theme">// Generate 3 Textures (sizeof(Texture)=3 ID's)</font>
	for (int loop=0; loop&lt;sizeof(Texture); loop++)						<font class="theme">// Loop Through All The ID's (Bitmap Images)</font>
	{
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">LoadImage
takes the following parameters: GetModuleHandle(NULL) - A handle to an
instance. MAKEINTRESOURCE(Texture[loop]) - Converts an Integer
Value (Texture[loop]) to a resource value (this is the image to load).
IMAGE_BITMAP - Tells our program that the resource to load is a bitmap
image.
<br><br>The next two parameters (0,0) are the desired height and width
of the image in pixels. We want to use the default size so we set both
to 0.
<br><br>The last parameter (LR_CREATEDIBSECTION) returns a DIB section
bitmap, which is a bitmap without all the color information stored in
the data.
Exactly what we need.
<br><br>
hBMP points to the bitmap data that is loaded by LoadImage( ).
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>		hBMP=(HBITMAP)LoadImage(GetModuleHandle(NULL),MAKEINTRESOURCE(Texture[loop]), IMAGE_BITMAP, 0, 0, LR_CREATEDIBSECTION);
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">Next
we check to see if the pointer (hBMP) actually points to data. If you
wanted to add error checking, you could check hBMP and pop up a
messagebox if there's no data.
<br><br>
If data exists, we use GetObject( ) to grab all of the data (sizeof(BMP)) from hBMP and store it in our BMP (bitmap structure).
<br><br>
glPixelStorei tells OpenGL that the data is stored in word alignments (4 bytes per pixel).
<br><br>
We then bind to our texture, set the filtering to GL_LINEAR_MIPMAP_LINEAR (nice and smooth), and generate the texture.
<br><br>Notice that we use BMP.bmWidth and BMP.bmHeight to get the
height and width of the bitmap. We also have to swap the Red and Blue
colors using
GL_BGR_EXT. The actual resource data is retreived from BMP.bmBits.
<br><br>
The last step is to delete the bitmap object freeing all system resources associated with the object.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>		if (hBMP)									<font class="theme">// Does The Bitmap Exist?</font>
		{										<font class="theme">// If So...</font>
			GetObject(hBMP,sizeof(BMP), &amp;BMP);					<font class="theme">// Get The Object</font>
												<font class="theme">// hBMP: Handle To Graphics Object</font>
												<font class="theme">// sizeof(BMP): Size Of Buffer For Object Information</font>
												<font class="theme">// Buffer For Object Information</font>
			glPixelStorei(GL_UNPACK_ALIGNMENT,4);					<font class="theme">// Pixel Storage Mode (Word Alignment / 4 Bytes)</font>
			glBindTexture(GL_TEXTURE_2D, texture[loop]);				<font class="theme">// Bind Our Texture</font>
			glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);		<font class="theme">// Linear Filtering</font>
			glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_LINEAR); <font class="theme">// Mipmap Linear Filtering</font>

			<font class="theme">// Generate Mipmapped Texture (3 Bytes, Width, Height And Data From The BMP)</font>
			gluBuild2DMipmaps(GL_TEXTURE_2D, 3, BMP.bmWidth, BMP.bmHeight, GL_BGR_EXT, GL_UNSIGNED_BYTE, BMP.bmBits);
			DeleteObject(hBMP);							<font class="theme">// Delete The Bitmap Object</font>
		}
	}
}
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
Nothing really fancy in the init code.  We add LoadGLTextures() to call the code above.  The screen clear
color is black.  Depth testing is disabled (cheap way to blend).  We enable texture mapping, then set up
and enable blending.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>BOOL Initialize (GL_Window* window, Keys* keys)							<font class="theme">// Any GL Init Code &amp; User Initialiazation Goes Here</font>
{
	g_window	= window;
	g_keys		= keys;

	<font class="theme">// Start Of User Initialization</font>
	LoadGLTextures();									<font class="theme">// Load The Textures From Our Resource File</font>
	
	glClearColor (0.0f, 0.0f, 0.0f, 0.5f);							<font class="theme">// Black Background</font>
	glClearDepth (1.0f);									<font class="theme">// Depth Buffer Setup</font>
	glDepthFunc (GL_LEQUAL);								<font class="theme">// The Type Of Depth Testing (Less Or Equal)</font>
	glDisable(GL_DEPTH_TEST);								<font class="theme">// Disable Depth Testing</font>
	glShadeModel (GL_SMOOTH);								<font class="theme">// Select Smooth Shading</font>
	glHint (GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST);					<font class="theme">// Set Perspective Calculations To Most Accurate</font>
	glEnable(GL_TEXTURE_2D);								<font class="theme">// Enable Texture Mapping</font>
	glBlendFunc(GL_ONE,GL_SRC_ALPHA);							<font class="theme">// Set Blending Mode (Cheap / Quick)</font>
	glEnable(GL_BLEND);									<font class="theme">// Enable Blending</font>
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
We need to initialize all 50 objects right off the start so they don't appear in the middle of the screen
or all in the same location.  The loop below does just that.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>	for (int loop=0; loop&lt;50; loop++)							<font class="theme">// Loop To Initialize 50 Objects</font>
	{
		SetObject(loop);								<font class="theme">// Call SetObject To Assign New Random Values</font>
	}

	return TRUE;										<font class="theme">// Return TRUE (Initialization Successful)</font>
}

void Deinitialize (void)									<font class="theme">// Any User DeInitialization Goes Here</font>
{
}

void Update (DWORD milliseconds)								<font class="theme">// Perform Motion Updates Here</font>
{
	if (g_keys-&gt;keyDown [VK_ESCAPE] == TRUE)						<font class="theme">// Is ESC Being Pressed?</font>
	{
		TerminateApplication (g_window);						<font class="theme">// Terminate The Program</font>
	}

	if (g_keys-&gt;keyDown [VK_F1] == TRUE)							<font class="theme">// Is F1 Being Pressed?</font>
	{
		ToggleFullscreen (g_window);							<font class="theme">// Toggle Fullscreen Mode</font>
	}
}
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
Now for the drawing code.  In this section I'll attempt to explain the easiest way to texture map a single
image across two triangles.  For some reason everyone seems to think it's near impossible to texture an
image to a triangle.
<br><br>
The truth is, you can texture an image to any shape you want.  With very little effort.  The image can
match the shape or it can be a completely different pattern.  It really doesn't matter.
<br><br>
First things first... we clear the screen and set up a loop to render all 50 of our butterflies (objects).
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>void Draw (void)										<font class="theme">// Draw The Scene</font>
{
	glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);					<font class="theme">// Clear Screen And Depth Buffer</font>

	for (int loop=0; loop&lt;50; loop++)							<font class="theme">// Loop Of 50 (Draw 50 Objects)</font>
	{
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
We call glLoadIdentity( ) to reset the modelview matrix.  Then we select the texture that was assigned
to our object (obj[loop].tex).
<br><br>
We position the butterfly using glTranslatef() then rotate the buttefly 45 degrees on it's X axis.  This
tilts the butterfly a little more towards the viewer so it doesn't look like a flat 2D object.
<br><br>
The final rotation spins the butterfly on it's z-axis which makes it spin as it falls down the screen.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>		glLoadIdentity ();								<font class="theme">// Reset The Modelview Matrix</font>
		glBindTexture(GL_TEXTURE_2D, texture[obj[loop].tex]);				<font class="theme">// Bind Our Texture</font>
		glTranslatef(obj[loop].x,obj[loop].y,obj[loop].z);				<font class="theme">// Position The Object</font>
		glRotatef(45.0f,1.0f,0.0f,0.0f);						<font class="theme">// Rotate On The X-Axis</font>
		glRotatef((obj[loop].spinz),0.0f,0.0f,1.0f);					<font class="theme">// Spin On The Z-Axis</font>
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
Texturing a triangle is not all that different from texturing a quad.  Just because you only have 3
vertices doesn't mean you can't texture a quad to your triangle.  The only difference is that you need
to be more aware of your texture coordinates.
<br><br>
In the code below, we draw the first triangle.  We start at the top right corner of an invisible quad.
We then move left until we get to the top left corner.  From there we go to the bottom left corner.
<br><br>
The code below will render the following image:
<br><br>
<center><img src="lesson.asp-Dateien/triangle1.jpg"></center>
<br><br>
Notice that half the buttefly is rendered on the first triangle.  The other half is rendered on the
second triangle.  The texture coordinates match up with the vertex coordinates and although there are
only 3 texture coordinates, it's still enough information to tell OpenGL what portion of the image needs
to be mapped to the triangle.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>		glBegin(GL_TRIANGLES);								<font class="theme">// Begin Drawing Triangles</font>
			<font class="theme">// First Triangle</font>
			glTexCoord2f(1.0f,1.0f); glVertex3f( 1.0f, 1.0f, 0.0f);			<font class="theme">// Point 1 (Top Right)</font>
			glTexCoord2f(0.0f,1.0f); glVertex3f(-1.0f, 1.0f, obj[loop].flap);	<font class="theme">// Point 2 (Top Left)</font>
			glTexCoord2f(0.0f,0.0f); glVertex3f(-1.0f,-1.0f, 0.0f);			<font class="theme">// Point 3 (Bottom Left)</font>
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
The code below renders the second half of the triangle.  Same technique as above, but this time we render
from the top right to the bottom left, then over to the bottom right.
<br><br>
<center><img src="lesson.asp-Dateien/triangle2.jpg"></center>
<br><br>
The second point of the first triangle and the third point of the second triangle move back and forth on
the z-axis to create the illusion of flapping.  What's really happening is that point is moving from -1.0f
to 1.0f and then back, which causes the two triangles to bend in the center where the butterflies body is.
<br><br>
If you look at the two pictures you will notice that points 2 and 3 are the tips of the wings.  Creates a
very nice flapping effect with minimal effort.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>			<font class="theme">// Second Triangle</font>
			glTexCoord2f(1.0f,1.0f); glVertex3f( 1.0f, 1.0f, 0.0f);			<font class="theme">// Point 1 (Top Right)</font>
			glTexCoord2f(0.0f,0.0f); glVertex3f(-1.0f,-1.0f, 0.0f);			<font class="theme">// Point 2 (Bottom Left)</font>
			glTexCoord2f(1.0f,0.0f); glVertex3f( 1.0f,-1.0f, obj[loop].flap);	<font class="theme">// Point 3 (Bottom Right)</font>

		glEnd();									<font class="theme">// Done Drawing Triangles</font>
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
The following bit of code moves the butterfly down the screen by subtracting obj[loop].yi from obj[loop].y.
The butterfly spinz value is increased by spinzi (which can be a negative or positive value) and the
wings are increased by fi.  fi can also be a negative or positive direction depending on the direction we
want the wings to flap.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>		obj[loop].y-=obj[loop].yi;							<font class="theme">// Move Object Down The Screen</font>
		obj[loop].spinz+=obj[loop].spinzi;						<font class="theme">// Increase Z Rotation By spinzi</font>
		obj[loop].flap+=obj[loop].fi;							<font class="theme">// Increase flap Value By fi</font>
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
After moving the butterfly down the screen, we need to see if it's gone past the bottom of the screen
(no longer visible).  If it has, we call SetObject(loop) to assign the butterfly a new texture, new fall
speed, etc.
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>		if (obj[loop].y&lt;-18.0f)								<font class="theme">// Is Object Off The Screen?</font>
		{
			SetObject(loop);							<font class="theme">// If So, Reassign New Values</font>
		}
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
To make the wings flap, we check to see if the flap value is greater than or less than 1.0f and -1.0f.
If the wing is greater than or less than those values, we change the flap direction by making fi=-fi.
<br><br>
So if the wings were going up, and they hit 1.0f, fi will become a negative value which will make the wings
go down.
<br><br>
Sleep(15) has been added to slow the program down by 15 milliseconds.  It ran insanely fast on a friends
machine, and I was too lazy to modify the code to take advantage of the timer :)
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><pre>		if ((obj[loop].flap&gt;1.0f) || (obj[loop].flap&lt;-1.0f))				<font class="theme">// Time To Change Flap Direction?</font>
		{
			obj[loop].fi=-obj[loop].fi;						<font class="theme">// Change Direction By Making fi = -fi</font>
		}
	}

	Sleep(15);										<font class="theme">// Create A Short Delay (15 Milliseconds)</font>

	glFlush ();										<font class="theme">// Flush The GL Rendering Pipeline</font>
}
</pre><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="tl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="tc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="100%"></td><td class="tr"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="l"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="back3" valign="top" width="100%"><font class="text">
I hope you enjoyed the tutorial.  Hopefully it makes loading textures from a resource a lot easier to
understand, and texturing triangles a snap.  I've reread this tutorial about 5 times now, and it seems
easy enough, but if you're still having problems, let me know.  As always, I want the tutorials to be the
best that they can be, so feedback is greatly appreciated!
<br><br>
Thanks to everyone for the great support!  This site would be nothing without it's visitors!!!
<br><br>
<b>Jeff Molofee</b> (<b>NeHe</b>)
<br><br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/vc/lesson38.zip">Visual C++</a> Code For This Lesson.
<br><br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/bcb6/lesson38_bcb6.zip">Borland C++ Builder 6</a> Code For This Lesson. ( Conversion by <a href="mailto:christian@tugzip.com">Christian Kindahl</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/cwarrior/lesson38.zip">Code Warrior 5.3</a> Code For This Lesson. ( Conversion by <a href="mailto:DelusionalBeing@hotmail.com">Scott Lupton</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/delphi/lesson38.zip">Delphi</a> Code For This Lesson. ( Conversion by <a href="mailto:michal_praha@seznam.cz">Michal Tucek</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/devc/lesson38.zip">Dev C++</a> Code For This Lesson. ( Conversion by <a href="mailto:zealouselixir@mchsi.com">Warren Moore</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/gameglut/lesson38.zip">Game GLUT</a> Code For This Lesson. ( Conversion by <a href="mailto:alex_r@vortexentertainment.com">Alexandre Ribeiro de S�</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/lccwin32/lccwin32_lesson38.zip">LCC Win32</a> Code For This Lesson. ( Conversion by <a href="mailto:rwishlaw@shaw.ca">Robert Wishlaw</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/macosxcocoa/lesson38.zip">Mac OS X/Cocoa</a> Code For This Lesson. ( Conversion by <a href="mailto:blb@pobox.com">Bryan Blackburn</a> )<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/vs_net/lesson38.zip">Visual Studio .NET</a> Code For This Lesson. ( Conversion by <a href="mailto:ultimatezeus@hotmail.com">Grant James</a> )<br>
<br><br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/extras/lesson38/lesson38%20-%20enhanced.zip">Lesson 38 - Enhanced</a> (Masking, Sorting, Keyboard - NeHe).<br>
* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/extras/lesson38/lesson38%20-%20screensaver.zip">Lesson 38 - Screensaver</a> by Brian Hunsucker.
<br><br>
<table border="0" width="100%">
<tbody><tr><td align="left" width="50%"><b><font size="-1"><a href="http://nehe.gamedev.net/data/lessons/lesson.asp?lesson=37">&lt; Lesson 37</a></font></b></td>
<td align="right" width="50%"><b><font size="-1"><a href="http://nehe.gamedev.net/data/lessons/lesson.asp?lesson=39">Lesson 39 &gt;</a></font></b></td>
</tr></tbody></table>
</font></td><td class="r"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table><table border="0" cellpadding="0" cellspacing="0" width="100%"><tbody><tr><td class="bl"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="bc" width="100%"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td><td class="br"><img src="lesson.asp-Dateien/blank.gif" alt="" height="28" width="28"></td></tr></tbody></table>

</body></html>